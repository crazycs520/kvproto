// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tidbpb.proto

package tidbpb

import (
	"fmt"
	"math"

	proto "github.com/golang/protobuf/proto"

	_ "github.com/gogo/protobuf/gogoproto"

	mpp_processor "github.com/pingcap/kvproto/pkg/mpp_processor"

	context "golang.org/x/net/context"

	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Tidb service

type TidbClient interface {
	MppProcessor(ctx context.Context, in *mpp_processor.Request, opts ...grpc.CallOption) (*mpp_processor.Response, error)
}

type tidbClient struct {
	cc *grpc.ClientConn
}

func NewTidbClient(cc *grpc.ClientConn) TidbClient {
	return &tidbClient{cc}
}

func (c *tidbClient) MppProcessor(ctx context.Context, in *mpp_processor.Request, opts ...grpc.CallOption) (*mpp_processor.Response, error) {
	out := new(mpp_processor.Response)
	err := c.cc.Invoke(ctx, "/tidbpb.Tidb/MppProcessor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Tidb service

type TidbServer interface {
	MppProcessor(context.Context, *mpp_processor.Request) (*mpp_processor.Response, error)
}

func RegisterTidbServer(s *grpc.Server, srv TidbServer) {
	s.RegisterService(&_Tidb_serviceDesc, srv)
}

func _Tidb_MppProcessor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(mpp_processor.Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TidbServer).MppProcessor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tidbpb.Tidb/MppProcessor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TidbServer).MppProcessor(ctx, req.(*mpp_processor.Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tidb_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tidbpb.Tidb",
	HandlerType: (*TidbServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MppProcessor",
			Handler:    _Tidb_MppProcessor_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tidbpb.proto",
}

func init() { proto.RegisterFile("tidbpb.proto", fileDescriptor_tidbpb_b0183f38d95d747d) }

var fileDescriptor_tidbpb_b0183f38d95d747d = []byte{
	// 165 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0xc9, 0x4c, 0x49,
	0x2a, 0x48, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0xa4, 0x84, 0x73, 0x0b,
	0x0a, 0xe2, 0x0b, 0x8a, 0xf2, 0x93, 0x53, 0x8b, 0x8b, 0xf3, 0x8b, 0x20, 0x92, 0x52, 0x22, 0xe9,
	0xf9, 0xe9, 0xf9, 0x60, 0xa6, 0x3e, 0x88, 0x05, 0x15, 0xe5, 0x2f, 0x2a, 0x2d, 0x2e, 0x01, 0x33,
	0x21, 0x02, 0x46, 0x9e, 0x5c, 0x2c, 0x21, 0x99, 0x29, 0x49, 0x42, 0x8e, 0x5c, 0x3c, 0xbe, 0x05,
	0x05, 0x01, 0x30, 0x43, 0x84, 0xc4, 0xf4, 0x50, 0x0d, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e,
	0x91, 0x12, 0xc7, 0x10, 0x2f, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x55, 0x62, 0x70, 0x52, 0xbb, 0xb1,
	0x82, 0x83, 0xf1, 0xc4, 0x23, 0x39, 0xc6, 0x0b, 0x8f, 0xe4, 0x18, 0x1f, 0x3c, 0x92, 0x63, 0x9c,
	0xf1, 0x58, 0x8e, 0x81, 0x4b, 0x20, 0xbf, 0x28, 0x5d, 0xaf, 0x24, 0x33, 0xbb, 0x4c, 0x2f, 0xbb,
	0x0c, 0x6c, 0x65, 0x12, 0x1b, 0x98, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x56, 0x1a, 0x8f,
	0xd4, 0xcd, 0x00, 0x00, 0x00,
}
